{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImage","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurns","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAM9D,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OAAOG,QATd,WACXJ,GACDF,EAAaD,IAOmCK,IAAI,iBAAiBC,IAAI,mBCRrF,IAAME,EAAY,CACd,CAAEH,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,kBAAmBI,SAAS,GACnC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,mBAAoBI,SAAS,IA2EzBC,MAxEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACJC,EADI,KACGC,EADH,OAEeF,mBAAS,GAFxB,mBAEJG,EAFI,KAEGC,EAFH,OAGuBJ,mBAAS,MAHhC,mBAGJK,EAHI,KAGOC,EAHP,OAIuBN,mBAAS,MAJhC,mBAIJO,EAJI,KAIOC,EAJP,OAKqBR,oBAAS,GAL9B,mBAKJR,EALI,KAKMiB,EALN,KAQLC,EAAe,WACjB,IAAMC,EAAgB,UAAId,EAAcA,GAAWe,MAAK,kBAAMC,KAAKC,SAAW,MAAKC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,cAEtHR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAIPd,EAAe,SAACD,GAClBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIlD4B,qBAAU,WACFZ,GAAaE,IACbE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC5BQ,GAAS,SAACgB,GACN,OAAOA,EAAUH,KAAI,SAAC1B,GAClB,OAAIA,EAAKK,MAAQW,EAAUX,IAChB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAInB8B,KAEAC,YAAW,kBAAMD,MAAc,QAGxC,CAACd,EAAWE,IAEfc,QAAQC,IAAIrB,GAGZ,IAAMkB,EAAa,WACfb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACmB,GAAD,OAAeA,EAAY,KACpCd,GAAY,IAQhB,OAJAQ,qBAAU,WACNP,MACD,IAGC,sBAAKjB,UAAU,MAAf,UACI,4CACA,wBAAQG,QAASc,EAAjB,sBACA,qBAAKjB,UAAU,YAAf,SACKQ,EAAMc,KAAI,SAAC1B,GAAD,OACP,cAAC,EAAD,CAA0BA,KAAMA,EAAMC,aAAcA,EAAcC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAASN,SAAUA,GAA9HH,EAAK2B,SAG9B,wCAAWb,SC3EvBqB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.3d0fe0bf.chunk.js","sourcesContent":["import \"./SingleCard.css\";\r\n\r\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n                <img className=\"front\" src={card.src} alt=\"card front\" />\r\n                <img className=\"back\" onClick={handleClick} src=\"/img/cover.png\" alt=\"card back\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SingleCard from \"./components/SingleCard\";\n\nconst cardImage = [\n    { src: \"/img/helmet-1.png\", matched: false },\n    { src: \"/img/potion-1.png\", matched: false },\n    { src: \"/img/ring-1.png\", matched: false },\n    { src: \"/img/scroll-1.png\", matched: false },\n    { src: \"/img/shield-1.png\", matched: false },\n    { src: \"/img/sword-1.png\", matched: false },\n];\n\nfunction App() {\n    const [cards, setCards] = useState([]);\n    const [turns, setTurns] = useState(0);\n    const [choiceOne, setChoiceOne] = useState(null);\n    const [choiceTwo, setChoiceTwo] = useState(null);\n    const [disabled, setDisabled] = useState(false);\n\n    // shuffle cards\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImage, ...cardImage].sort(() => Math.random() - 0.5).map((card) => ({ ...card, id: Math.random() }));\n\n        setChoiceOne(null);\n        setChoiceTwo(null);\n        setCards(shuffledCards);\n        setTurns(0);\n    };\n\n    // handle a choice\n    const handleChoice = (card) => {\n        choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n    };\n\n    // compare 2 selected cards\n    useEffect(() => {\n        if (choiceOne && choiceTwo) {\n            setDisabled(true);\n            if (choiceOne.src === choiceTwo.src) {\n                setCards((prevCards) => {\n                    return prevCards.map((card) => {\n                        if (card.src === choiceOne.src) {\n                            return { ...card, matched: true };\n                        } else {\n                            return card;\n                        }\n                    });\n                });\n                resetTurns();\n            } else {\n                setTimeout(() => resetTurns(), 1000);\n            }\n        }\n    }, [choiceOne, choiceTwo]);\n\n    console.log(cards);\n\n    // reset choices & increase turn\n    const resetTurns = () => {\n        setChoiceOne(null);\n        setChoiceTwo(null);\n        setTurns((prevTurns) => prevTurns + 1);\n        setDisabled(false);\n    };\n\n    // start a new game automagically\n    useEffect(() => {\n        shuffleCards();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h1>Magic Math</h1>\n            <button onClick={shuffleCards}>New Game</button>\n            <div className=\"card-grid\">\n                {cards.map((card) => (\n                    <SingleCard key={card.id} card={card} handleChoice={handleChoice} flipped={card === choiceOne || card === choiceTwo || card.matched} disabled={disabled} />\n                ))}\n            </div>\n            <p>Truns: {turns}</p>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}